# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno and run tests across stable and nightly builds on Windows, Ubuntu and macOS.
# For more information see: https://github.com/denolib/setup-deno

name: iPhone Simulator Test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]



jobs:
  
  test:
    runs-on: ${{ matrix.os }} # runs a test on Ubuntu, Windows and macOS
    strategy:
      matrix:
        deno: ["v1.x"]
        os: [macOS-latest]
    steps:
      - name: Setup repo
        uses: actions/checkout@v1
       
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
            
      - name: Install iOS 13.7 Runtime        
        run: |  
          gem install xcode-install
          xcversion simulators --install='iOS 13.7'    
      # - name: Create - iPhone11 on iOS 13.7     
      #   run: |
      #      xcrun simctl create TestiPhone11 com.apple.CoreSimulator.SimDeviceType.iPhone-11 com.apple.CoreSimulator.SimRuntime.iOS-13-7 > deviceid.txt 
      
      - name: Set up Appium
        run: npm install -g appium

      - name: Set up hombrew
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"

      - name: Set up carthage
        run: brew install carthage

      - name: Install package
        run: npm install

      - name: Run test
        run: npm run test
  getlog:
    needs: test
    strategy:
      matrix:
        os: [macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/upload-artifact@v2
        with:
          name: wdio-appium.log
          path: ./wdio-appium.log


    
